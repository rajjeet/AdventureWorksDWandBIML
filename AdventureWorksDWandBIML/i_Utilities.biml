<#@ import namespace="System.Data" #>

<#+
    public AstTableColumnBaseNode GetSqlServerExtendedProperties(string conn, AstTableNode tableNode, AstTableColumnBaseNode columnNode) {
        var query = @"SELECT name, value FROM fn_listextendedproperty(NULL,'schema','" +  tableNode.Schema.Name  +
                        "' ,'table','" +  tableNode.Name  + "','Column','" + columnNode.Name +"')";
        
        var extProps = ExternalDataAccess.GetDataTable(conn, query);
        
        foreach(DataRow extProp in extProps.Rows) {
            columnNode.AddAnnotation(AnnotationType.Tag, extProp["value"].ToString(), extProp["name"].ToString());
        }
        return columnNode;
    }
    
    public AstTableNode GetSqlServerExtendedProperties(string conn, AstTableNode tableNode) {
        var query = @"SELECT name, value FROM fn_listextendedproperty(NULL,'schema','" +  tableNode.Schema.Name  +
                        "' ,'table','" +  tableNode.Name  + "', NULL, NULL)";
        
        var extProps = ExternalDataAccess.GetDataTable(conn, query);
        
        foreach(DataRow extProp in extProps.Rows) {
            tableNode.AddAnnotation(AnnotationType.Tag, extProp["value"].ToString(), extProp["name"].ToString());
        }
        return tableNode;
    }
    
    public string GetSCDExpression(AstTableNode tableNode, string SCDType){
        string expression = "";
        bool isFirstColumn = true;
        foreach (var column in tableNode.Columns) {
            if (column.GetTag("ColumnRole") == "SCD" + SCDType) {
                if(isFirstColumn) {
                    expression = GetColumnComparisonExpression(column);
                    isFirstColumn = false;
                } else {
                    expression += $" || " + GetColumnComparisonExpression(column);
                }
            }
        }
        return expression;
    }
    
    string GetColumnComparisonExpression(AstTableColumnBaseNode column) {
        
        return $"REPLACENULL({column.Name},0) != REPLACENULL(dim_{column.Name},0)";
    }
    
    public string GetUpdateQuery(AstTableNode tableNode, string SCDType, string updateTable){
        var query = "";
        bool firstLoop;
        var endDateColumnName = tableNode.Columns.Where(c => c.GetTag("ColumnRole") == "EndDate").FirstOrDefault();
        
        query = "UDPATE target \r\n set\r\n";
        
        firstLoop = true;
        if (SCDType == "SCD1"){
            foreach(var column in tableNode.Columns.Where(c => c.GetTag("ColumnRole") == SCDType)) { 
                query += $"\t{(firstLoop ? "":",")}target.[{column.Name}] = source.[{column.Name}]\r\n";
                firstLoop = false;
            }
        } 
        
        if (SCDType == "SCD2"){
            if (endDateColumnName != null)
                query += $"\ttarget.[{endDateColumnName}] = GETDATE()\r\n";
        }
        
        query += $"FROM {tableNode.SchemaQualifiedName} as target\r\n";
        query += $"JOIN {updateTable} source ON \r\n";
        
        firstLoop = true;
        foreach(var column in tableNode.Columns.Where(c => c.GetTag("ColumnRole") == "BK")){
            query += $"\t{(firstLoop ? "":"AND")}target.[{column.Name}] = source.[{column.Name}]\r\n";
            firstLoop = false;
        }
        
        if (tableNode.GetTag("SCDType") == "2") {
            if (endDateColumnName != null)
                query += $"\tWHERE target.[{endDateColumnName}] IS NULL";
        }

        return query;
        
    }

#>