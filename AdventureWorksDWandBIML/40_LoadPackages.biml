<#@ template tier="40" language="C#" #>
<#@ include file="i_CommonVariables.biml"#>
<#@ include file="i_Utilities.biml"#>
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
    <Packages>
        <# foreach(var table in RootNode.Tables.Where(t => t.GetTag("Type") == "Edw")) { #>
        <Package Name="Load <#=table.Schema.Name#>_<#=table.Name#>" ProtectionLevel="EncryptSensitiveWithUserKey" 
                    ConstraintMode="Linear">
            <#=CallBimlScript("cbs_AuditParameterVariables.biml", 
                table.Schema.Name, table.Name, table.GetTag("Type"), table.GetTag("IsIncremental"), 
                table.GetTag("SourceQuery"), table.GetTag("IncrementColumn"))#>

            <Tasks>
                
            <#=CallBimlScript("cbs_ExecuteSQLCountRows.biml", table.Schema.Name, table.Name, edwConnName, 
                "User.InitialTableRowCnt", "Initial")#>

            <ExecuteSQL Name="SQL Truncate Update Table" ConnectionName="<#=edwConnName#>">
                <DirectInput>TRUNCATE TABLE <#=edwUpdateSchemaName#>_<#=edwUpdatePrefix#><#=table.Name#>;</DirectInput>
            </ExecuteSQL>                
                    
            <#=CallBimlScript("cbs_AuditBegin.biml", edwConnName)#>
            
            <Dataflow Name="DFT Load <#=table.Schema.Name#>_<#=table.Name#>">
                <Transformations>
                    
                      <OleDbSource Name="OLEDBSRC <#=stagingSchemaName#>_v<#=table.Name#>" 
                                    ConnectionName="<#=stagingConnName#>">
                       <ExternalTableInput Table="[<#=stagingSchemaName#>].[v<#=table.Name#>]" />
                    </OleDbSource>
                    
                    <RowCount Name="RC Extract" VariableName="User.ExtractRowCnt" />
                    
                    <DerivedColumns Name="DC Audit Id">
                        <Columns>
                            <Column Name="AuditId" DataType="Int32">@[User::AuditId]</Column>
                        </Columns>
                    </DerivedColumns>
                    
                    <# var columnBK = table.Columns.Where(c => c.GetTag("ColumnRole") == "BK").ElementAt(0); #>
                    
                    <Lookup Name="LU <#=edwSchemaName#>_<#=table.Name#>" 
                            NoMatchBehavior="RedirectRowsToNoMatchOutput"
                            OleDbConnectionName="<#=edwConnName#>">
                        <ExternalTableInput Table="<#=table.SchemaQualifiedName#>" />
                        <Inputs>
                            <Column SourceColumn="<#=columnBK#>"/>
                        </Inputs>
                        <Outputs>
                            <# foreach(var column in table.Columns) { #>
                                <# if (column.GetTag("ColumnRole") == "SCD1" || column.GetTag("ColumnRole") == "SCD2") { #>
                                    <Column SourceColumn="<#=column.Name#>" TargetColumn="dim_<#=column.Name#>" />
                                <# } #>
                            <# } #>
                        </Outputs>
                    </Lookup>

                    <ConditionalSplit Name="CS Changed Columns">
                        <InputPath OutputPathName="LU <#=edwSchemaName#>_<#=table.Name#>.Match" />
                        <OutputPaths>
                        <# if (table.GetTag("SCDType") == "2") { #>
                            <OutputPath Name="SCD2">
                                <Expression><#=GetSCDExpression(table, "2")#></Expression>
                            </OutputPath>
                        <# } #>
                            <OutputPath Name="SCD1">
                                <Expression><#=GetSCDExpression(table, "1")#></Expression>
                            </OutputPath>
                        </OutputPaths>
                    </ConditionalSplit>
                    
                    <# if (table.GetTag("SCDType") == "2") { #>
                    <Multicast Name="MC SCD2">
                        <InputPath OutputPathName="CS Changed Columns.SCD2" />
                        <OutputPaths>
                            <OutputPath Name="SCD2 Insert" />
                            <OutputPath Name="SCD2 Update" />
                        </OutputPaths>
                    </Multicast>
                    
                    <DerivedColumns Name="DC Start Date">
                        <InputPath OutputPathName="MC SCD2.SCD2 Insert" />
                        <Columns>
                            <Column Name="StartDate" DataType="DateTime">GETDATE()</Column>
                        </Columns>
                    </DerivedColumns>
                    
                    <UnionAll Name="UNI Insert">
                        <InputPaths>
                            <InputPath OutputPathName="DC Start Date.Output" />
                            <InputPath OutputPathName="LU <#=edwSchemaName#>_<#=table.Name#>.NoMatch" />
                        </InputPaths>
                    </UnionAll>
                    
                    <DerivedColumns Name="DC End Date">
                        <InputPath OutputPathName="MC SCD2.SCD2 Update" />
                        <Columns>
                            <Column Name="EndDate" DataType="DateTime">GETDATE()</Column>
                        </Columns>
                    </DerivedColumns>   
                    
                    <UnionAll Name="UNI Update">
                        <InputPaths>
                            <InputPath OutputPathName="DC End Date.Output" />
                            <InputPath OutputPathName="CS Changed Columns.SCD1" />
                        </InputPaths>
                    </UnionAll>                    
                    <# } #>
                    
                    <!-- INSERT -->
                    <RowCount Name="RC Insert" VariableName="User.InsertRowCnt">
                        <# if (table.GetTag("SCDType") == "2") { #>
                        <InputPath OutputPathName="UNI Insert.Output" />
                        <# } else { #>
                        <InputPath OutputPathName="LU <#=edwSchemaName#>_<#=table.Name#>.NoMatch" />
                        <# } #>
                    </RowCount>
                    
                    <OleDbDestination Name="OLEDBDEST <#=table.Schema.Name#>_<#=table.Name#>" 
                                      ConnectionName="<#=edwConnName#>">
                        <InputPath OutputPathName="RC Insert.Output" />                                          
                        <ExternalTableOutput Table="<#=table.SchemaQualifiedName#>" />
                        <ErrorHandling ErrorRowDisposition="RedirectRow" TruncationRowDisposition="RedirectRow" />
                    </OleDbDestination>
                    
                    <!-- UPDATE -->
                    <RowCount Name="RC Update" VariableName="User.UpdateRowCnt">
                        <# if (table.GetTag("SCDType") == "2") { #>
                        <InputPath OutputPathName="UNI Update.Output" />
                        <# } else { #>
                        <InputPath OutputPathName="CS Changed Columns.SCD1" />
                        <# } #>
                    </RowCount>
                    
                    <# var updateTableLabel = $"{edwUpdateSchemaName}_{edwUpdatePrefix}{table.Name}"; #>
                    <# var updateTableSchemaQualifiedName = $"[{edwUpdateSchemaName}].[{edwUpdatePrefix}{table.Name}]"; #>

                    <OleDbDestination Name="OLEDBDEST <#=updateTableLabel#>" 
                                      ConnectionName="<#=edwConnName#>">
                        <InputPath OutputPathName="RC Update.Output" />
                        <ExternalTableOutput Table="<#=updateTableSchemaQualifiedName#>" />
                        <ErrorHandling ErrorRowDisposition="RedirectRow" TruncationRowDisposition="RedirectRow" />
                    </OleDbDestination>
                        
                    <UnionAll Name="UNI Error">
                        <InputPaths>
                            <InputPath OutputPathName="OLEDBDEST <#=updateTableLabel#>.Error" />
                            <InputPath OutputPathName="OLEDBDEST <#=table.Schema.Name#>_<#=table.Name#>.Error" />
                        </InputPaths>
                    </UnionAll>
                        
                    <RowCount Name="RC Error" VariableName="User.ErrorRowCnt">
                        <InputPath OutputPathName="UNI Error.Output" />
                    </RowCount>
                    
                    <FlatFileDestination Name="FFD <#=table.Schema.Name#>_<#=table.Name#>" ConnectionName="FFC <#=table.Schema.Name#>_<#=table.Name#>">
                        <InputPath OutputPathName="RC Error.Output" />
                    </FlatFileDestination>
                                        
                </Transformations>
            </Dataflow>
            
            <ExecuteSQL Name="SQL Update SCD1" ConnectionName="<#=edwConnName#>">
                <DirectInput><#=GetUpdateQuery(table, "SCD1", updateTableSchemaQualifiedName)#></DirectInput>
            </ExecuteSQL>
            
            <# if (table.GetTag("SCDType") == "2") { #>
            <ExecuteSQL Name="SQL Update SCD2" ConnectionName="<#=edwConnName#>">
                <DirectInput><#=GetUpdateQuery(table, "SCD2", updateTableSchemaQualifiedName)#></DirectInput>
            </ExecuteSQL>
            <# } #>
            
            <#=CallBimlScript("cbs_ExecuteSQLCountRows.biml", table.Schema.Name, table.Name, edwConnName, 
                    "User.FinalTableRowCnt", "Final")#>
                
            <#=CallBimlScript("cbs_AuditEnd.biml", edwConnName)#> 
            </Tasks>
        </Package>
        <# } #>
    </Packages>
</Biml>